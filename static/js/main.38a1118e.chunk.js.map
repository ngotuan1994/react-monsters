{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.components.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","react_default","a","createElement","className","alt","src","concat","monster","id","name","email","Cardlist","monsters","map","card_component_Card","key","SearchBox","_ref","placeholder","handleChange","type","onChange","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","searchField","_this2","fetch","then","response","json","users","setState","_this3","_this$state","filteredMonsters","filter","toLowerCase","includes","search_box_component_SearchBox","e","target","value","card_list_components_Cardlist","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"wTAEaA,qBAAO,SAACC,GAAD,OAClBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAI,UAAUC,IAAG,wBAAAC,OAA0BP,EAAMQ,QAAQC,GAAxC,4BACtBR,EAAAC,EAAAC,cAAA,cAAMH,EAAMQ,QAAQE,MACpBT,EAAAC,EAAAC,cAAA,cAAMH,EAAMQ,QAAQG,UCFXC,EAAW,SAAAZ,GAAK,OAC3BC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACZJ,EAAMa,SAASC,IAAI,SAAAN,GAAO,OACzBP,EAAAC,EAAAC,cAACY,EAAD,CAAMC,IAAKR,EAAQC,GAAID,QAASA,QCLzBS,SAAY,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,YAAaC,EAAhBF,EAAgBE,aAAhB,OACvBnB,EAAAC,EAAAC,cAAA,SACEC,UAAU,SACViB,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCmCCG,cArCb,SAAAA,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QACKI,MAAQ,CACXlB,SAAU,GACVmB,YAAa,IAJHR,mFAQM,IAAAS,EAAAN,KAClBO,MAAM,8CAA8CC,KAAK,SAAAC,GAAQ,OAC/DA,EAASC,SACRF,KAAK,SAAAG,GAAK,OAAIL,EAAKM,SAAS,CAAC1B,SAAWyB,uCAGpC,IAAAE,EAAAb,KAAAc,EAC2Bd,KAAKI,MAA/BlB,EADD4B,EACC5B,SAAUmB,EADXS,EACWT,YACZU,EAAmB7B,EAAS8B,OAAO,SAAAnC,GACvC,OAAOA,EAAQE,KAAKkC,cAAcC,SAASb,EAAYY,iBAIzD,OACE3C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAC2C,EAAD,CACE3B,YAAY,iBACZC,aAAc,SAAA2B,GAAC,OAAIP,EAAKD,SAAS,CAAEP,YAAae,EAAEC,OAAOC,WAG3DhD,EAAAC,EAAAC,cAAC+C,EAAD,CAAUrC,SAAU6B,YA9BVS,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAR,EAAA,GAAAZ,KAAAoB,EAAAC,KAAA,UAAqBrB,KAAK,SAAAjB,GAAiD,IAA9CuC,EAA8CvC,EAA9CuC,OAAQC,EAAsCxC,EAAtCwC,OAAQC,EAA8BzC,EAA9ByC,OAAQC,EAAsB1C,EAAtB0C,OAAQC,EAAc3C,EAAd2C,QAC3DJ,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAQR,MCDdS,IAASC,OACP9D,EAAAC,EAAAC,cAACF,EAAAC,EAAM8D,WAAP,KACE/D,EAAAC,EAAAC,cAAC8D,EAAD,OAEFC,SAASC,eAAe,SAM1Bf","file":"static/js/main.38a1118e.chunk.js","sourcesContent":["import React from 'react';\nimport '../card/card.styles.css';\nexport const Card = (props) => (\n  <div className=\"card-container\">\n    <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} ></img>\n    <h2> {props.monster.name}</h2>\n    <p>  {props.monster.email}</p>\n  </div>\n);\n","import React from 'react'\nimport './card-list.styles.css'\nimport '../card/card.component'\nimport { Card } from '../card/card.component';\nexport const Cardlist = props => (\n  <div className=\"card-list\">\n    {props.monsters.map(monster => (\n      <Card key={monster.id} monster={monster}></Card>\n    ))}\n\n  </div>\n);\n","import React from 'react';\nimport './search-box.styles.css';\nexport const SearchBox = ({ placeholder, handleChange }) => (\n  <input\n    className='search'\n    type=\"search\"\n    placeholder={placeholder}\n    onChange={handleChange }\n  />\n\n\n);\n","import './App.css';\nimport React, { Component } from 'react'\nimport { Cardlist } from './components/card-list/card-list.components';\nimport { SearchBox } from './components/search-box/search-box.component';\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\"\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response =>\n      response.json())\n      .then(users => this.setState({monsters : users}));\n\n  }\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster => {\n      return monster.name.toLowerCase().includes(searchField.toLowerCase())\n    }\n    )\n\n    return (\n      <div className=\"App\">\n        <h1> Monsters</h1>\n        <SearchBox\n          placeholder='search monster'\n          handleChange={e => this.setState({ searchField: e.target.value })} />\n\n\n        <Cardlist monsters={filteredMonsters}>\n\n        </Cardlist>\n\n      </div>\n    )\n  }\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}